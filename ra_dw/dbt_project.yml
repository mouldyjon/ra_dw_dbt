
# Name your package! Package names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'ra_dw'
version: '1.0'

# This setting configures which "profile" dbt uses for this project. Profiles contain
# database connection information, and should be configured in the  ~/.dbt/profiles.yml file
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that source models can be found
# in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

# You can define configurations for models in the `source-paths` directory here.
# Using these configurations, you can enable or disable models, change how they
# are materialized, and more!

# In this example config, we tell dbt to build all models in the example/ directory
# as views (the default). These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
    vars:
        # location of raw data table
        segment_page_views_table: "`ra-development.company_website.pages_view`"

        # number of trailing hours to re-sessionize for.
        # events can come in late and we want to still be able to incorporate
        # them into the definition of a session without needing a full refresh.
        segment_sessionization_trailing_window: 3

        # sessionization inactivity cutoff: of there is a gap in page view times
        # that exceeds this number of seconds, the subsequent page view will
        # start a new session.
        segment_inactivity_cutoff: 30 * 60

        # If there are extra columns you wish to pass through this package,
        # define them here. Columns will be included in the `segment_web_sessions`
        # model as `first_<column>` and `last_<column>`. Extremely useful when
        # using this package on top of unioned Segment sources, as you can then
        # pass through a column indicating which source the data is from.
        segment_pass_through_columns: []
