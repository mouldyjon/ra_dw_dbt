{{
    config(
        materialized='table'
    )
}}

SELECT
	timestamp_trunc(session_start_ts,HOUR) AS session_start_hour,
	session_start_ts,
	timestamp_diff (
		session_start_ts,lead(session_start_ts, 1) OVER (PARTITION BY anonymous_id ORDER BY session_start_ts DESC),SECOND) AS secs_between_sessions,
	anonymous_id,
	global_session_id,
	user_session_id,
	page_views_in_session,
  ra_blog_page_views_in_session,
  ra_commercial_page_views_in_session,
  dtd_page_views_in_session,
  case when entrance_url like '%https://drilltodetail.rittmananalytics.com%' then 'Podcast'
       when entrance_url like '%https://rittmananalytics.com/blog%' then 'Blog'
       else 'Prospect' end as session_visitor_type,
	CASE WHEN (page_views_in_session = 1) THEN
		1
	ELSE
		0
	END AS bounced_sessions,
	session_length_ts,
	entrance_url,
  entrance_campaign_source,
  entrance_campaign_content,
  entrance_campaign_medium,
  entrance_campaign_name,
    entrance_campaign_term,
  entrance_referrer,
  entrance_search
FROM (
	SELECT
		id,
		received_at,
		context_library_name,
		context_page_path,
		 "path",
		referrer,
		context_ip,
		context_page_title,
		sent_at,
		 "timestamp",
		title,
		uuid_ts,
		context_page_referrer,
		context_library_version,
		context_page_url,
		context_user_agent,
		url,
		user_id,
		anonymous_id,
		original_timestamp,
		context_page_search,
		search,
		context_protocols_source_id,
		context_locale,
		context_campaign_source,
		context_campaign_content,
		context_campaign_medium,
		context_campaign_name,
		context_campaign_term,
		last_event,
		is_new_session,
		is_session_entrance_page,
		global_session_id,
		user_session_id,
		count(*) OVER (PARTITION BY anonymous_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS page_views_in_session,
    count(case when url like '%https://rittmananalytics.com/blog%' then 1 end) OVER (PARTITION BY anonymous_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS ra_blog_page_views_in_session,
    count(case when url like '%https://rittmananalytics.com%' and url not like '%https://rittmananalytics.com/blog%' then 1 end) OVER (PARTITION BY anonymous_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)     AS ra_commercial_page_views_in_session,
    count(case when url like '%https://drilltodetail.rittmananalytics.com%' then 1 end) OVER (PARTITION BY anonymous_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS dtd_page_views_in_session,
		min(received_at) OVER (PARTITION BY anonymous_id,
			user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS session_start_ts,
		max (received_at) OVER (PARTITION BY anonymous_id,
		user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS session_end_ts,
		timestamp_diff (
    max (received_at) OVER (PARTITION BY anonymous_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
    min(received_at) OVER (PARTITION BY anonymous_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
		SECOND) AS session_length_ts,
		first_value (url) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_url,
    first_value (context_campaign_source) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_campaign_source,
    first_value (context_campaign_source) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_campaign_content,
    first_value (context_campaign_medium) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_campaign_medium,
    first_value (context_campaign_name) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_campaign_name,
    first_value (context_campaign_name) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_campaign_term,
    first_value (referrer) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_referrer,
    first_value (search) OVER (PARTITION BY anonymous_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_search,
FROM (
SELECT
	id,
	received_at,
	context_library_name,
	context_page_path,
	 "path",
	referrer,
	context_ip,
	context_page_title,
	sent_at,
	 "timestamp",
	title,
	uuid_ts,
	context_page_referrer,
	context_library_version,
	context_page_url,
	context_user_agent,
	url,
	user_id,
	anonymous_id,
	original_timestamp,
	context_page_search,
	search,
	context_protocols_source_id,
	context_locale,
	context_campaign_source,
	context_campaign_content,
	context_campaign_medium,
	context_campaign_name,
	context_campaign_term,
	last_event,
  url like 'https://%rittmananalytics.com%' as is_rittmananalytics,
  url like 'https://%drilltodetail.rittmananalytics.com%' as is_drilltodetail,
	is_new_session,
	(is_new_session = 1) AS is_session_entrance_page,
  sum(is_new_session) OVER (ORDER BY anonymous_id,
	received_at ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS global_session_id,
  sum(is_new_session) OVER (PARTITION BY anonymous_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS user_session_id,
FROM (
SELECT
	id,
	received_at,
	context_library_name,
	context_page_path,
	"path",
	referrer,
	context_ip,
	context_page_title,
	sent_at,
	"timestamp",
	title,
	uuid_ts,
	context_page_referrer,
	context_library_version,
	context_page_url,
	context_user_agent,
	url,
	user_id,
	anonymous_id,
	original_timestamp,
	context_page_search,
	search,
	context_protocols_source_id,
	context_locale,
	context_campaign_source,
	context_campaign_content,
	context_campaign_medium,
	context_campaign_name,
	context_campaign_term,
	last_event,
  case when TIMESTAMP_DIFF(received_at, last_event, MINUTE) >= 30 OR last_event IS NULL THEN 1 ELSE 0 END AS is_new_session
FROM (
SELECT
	id,
	received_at,
	context_library_name,
	context_page_path,
	 "path",
	referrer,
	context_ip,
	context_page_title,
	sent_at,
	 "timestamp",
	title,
	uuid_ts,
	context_page_referrer,
	context_library_version,
	context_page_url,
	context_user_agent,
	url,
	user_id,
	anonymous_id,
	original_timestamp,
	context_page_search,
	search,
	context_protocols_source_id,
	context_locale,
	context_campaign_source,
	context_campaign_content,
	context_campaign_medium,
	context_campaign_name,
	context_campaign_term,
	lead(received_at, 1) OVER (PARTITION BY anonymous_id ORDER BY received_at DESC) AS last_event
FROM
	{{ source('segment', 'pages') }}) last) final) pages) derived_table1
GROUP BY
	timestamp_trunc(session_start_ts,HOUR),
	session_start_ts,
	anonymous_id,
	global_session_id,
	user_session_id,
	page_views_in_session,
  ra_blog_page_views_in_session,
  ra_commercial_page_views_in_session,
  dtd_page_views_in_session,
	CASE WHEN (page_views_in_session = 1) THEN
		1
	ELSE
		0
	END,
	session_length_ts,
	entrance_url,
   entrance_campaign_source,
  entrance_campaign_content,
  entrance_campaign_medium,
  entrance_campaign_name,
    entrance_campaign_term,
  entrance_referrer,
  entrance_search
ORDER BY
	anonymous_id,
	user_session_id
